USE bd_zenatu


DROP TABLE IF EXISTS DIM_CLIENTE
DROP TABLE IF EXISTS DIM_TIPO_VALOR
DROP TABLE IF EXISTS FATO_ASSINATURA
DROP TABLE IF EXISTS DIM_CONTATO
DROP TABLE IF EXISTS DIM_ENDERECO
DROP TABLE IF EXISTS DIM_ENCOMENDA
DROP TABLE IF EXISTS FATO_PEDIDO
DROP TABLE IF EXISTS DIM_PRODUTO

DROP TABLE IF EXISTS TB_AUX_CLIENTE
DROP TABLE IF EXISTS TB_AUX_TIPO_VALOR
DROP TABLE IF EXISTS TB_AUX_ASSINATURA
DROP TABLE IF EXISTS TB_AUX_PEDIDO


CREATE TABLE DIM_CLIENTE(
	ID_CLIENTE INT NOT NULL PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	CPF VARCHAR(11) NOT NULL,
	ID_OPERACIONAL INT NOT NULL,
	CELULAR VARCHAR(13) NOT NULL,
	TELEFONE VARCHAR(13) NULL,
	EMAIL VARCHAR(50) NOT NULL,
	RUA VARCHAR(50) NOT NULL,
	NUMERO INT NOT NULL,
	REFERENCIA VARCHAR(50) NULL,
	CIDADE VARCHAR(50) NOT NULL,
	ESTADO VARCHAR(50) NOT NULL,
	UNIQUE (CPF)
) 


CREATE TABLE DIM_PRODUTO(
	ID_PRODUTO INT NOT NULL PRIMARY KEY,
	ID_OPERACIONAL INT NOT NULL,
	COD_PRODUTO INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	DATA_FABRICACAO DATETIME NOT NULL,
	DATA_VALIDADE DATETIME NOT NULL
)

CREATE TABLE DIM_TIPO_VALOR(
	ID_TIPO_VALOR INT NOT NULL PRIMARY KEY,
	TIPO_PACOTE VARCHAR(15) NOT NULL CHECK(TIPO_PACOTE IN ('1 POTE','3 POTES','5 POTES')),
	PRECO_PACOTE NUMERIC(10,2) NOT NULL
)

CREATE TABLE FATO_ASSINATURA(
    ID_ASSINATURA INT NOT NULL IDENTITY(1,1) PRIMARY KEY,
    ID_OPERACIONAL INT NOT NULL,
    VALOR_MENSALIDADE DECIMAL(10,2) NOT NULL,
	MESES_ASSINATURA INT NULL,
    STATUS VARCHAR(9) NOT NULL CHECK (STATUS IN('ATIVO', 'CANCELADO')),
	ID_DATA_INICIO BIGINT NOT NULL REFERENCES DIM_TEMPO,
    ID_DATA_CANCELAMENTO BIGINT NULL REFERENCES DIM_TEMPO,
    ID_CLIENTE INT NOT NULL REFERENCES DIM_CLIENTE, --MUDEI AQUI
    ID_TIPO_VALOR INT NOT NULL REFERENCES DIM_TIPO_VALOR--MUDEI AQUI
)

CREATE TABLE FATO_PEDIDO(
	ID_PEDIDO INT NOT NULL PRIMARY KEY,
	ID_OPERACIONAL INT NOT NULL,
	VALOR NUMERIC(10,2) NOT NULL,
	ID_CLIENTE INT NOT NULL REFERENCES DIM_CLIENTE,
	ID_TIPO_VALOR INT NOT NULL REFERENCES DIM_TIPO_VALOR,
	ID_PRODUTO INT NOT NULL REFERENCES DIM_PRODUTO,
	ID_DATA_COMPRA  BIGINT NOT NULL REFERENCES DIM_TEMPO,
	ID_DATA_PREVISAO_CHEGADA BIGINT NOT NULL REFERENCES DIM_TEMPO,
	ID_DATA_CHEGADA BIGINT NOT NULL REFERENCES DIM_TEMPO,
	ID_CIDADE INT NOT NULL REFERENCES DIM_CLIENTE
)

SELECT * FROM DIM_CLIENTE
SELECT * FROM DIM_PRODUTO
SELECT * FROM DIM_TIPO_VALOR
SELECT * FROM DIM_TEMPO
SELECT * FROM FATO_ASSINATURA
SELECT * FROM FATO_PEDIDO


-- ETL STAGING AREA TO OLAP


-- CLIENTE
GO
CREATE OR ALTER PROCEDURE SP_ETL_CLIENTE(@DATA DATETIME)
AS
BEGIN
	SET NOCOUNT ON
	DECLARE  
	@DATA_CARGA DATETIME,
	@NOME_TEMP VARCHAR(50), 
	@CPF_TEMP VARCHAR(11),
	@ID_OPERACIONAL_TEMP INT,
	@CELULAR_TEMP VARCHAR(13),
	@TELEFONE_TEMP VARCHAR(13),
	@EMAIL_TEMP VARCHAR(50),
	@RUA_TEMP VARCHAR(50),
	@NUMERO_TEMP INT,
	@REFERENCIA_TEMP VARCHAR(50),
	@CIDADE_TEMP VARCHAR(50),
	@ESTADO_TEMP VARCHAR(50) 

	DECLARE C_CLIENTE CURSOR
	FOR SELECT C.DATACARGA, C.NOME, C.CPF, C.COD_CLIENTE, C.CELULAR, C.TELEFONE, C.EMAIL, C.RUA,
	C.NUMERO, C.REFERENCIA, C.CIDADE, C.ESTADO FROM TB_AUX_CLIENTE C

	OPEN C_CLIENTE
	FETCH C_CLIENTE INTO @DATA_CARGA, @NOME_TEMP, @CPF_TEMP, @ID_OPERACIONAL_TEMP, @CELULAR_TEMP, @TELEFONE_TEMP, @EMAIL_TEMP, @RUA_TEMP,
	@NUMERO_TEMP, @REFERENCIA_TEMP, @CIDADE_TEMP, @ESTADO_TEMP

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		-- VERIFY IF THE CLIENT NOT EXISTS IN THE OLAP THEN INSERT
		IF NOT EXISTS (SELECT * FROM DIM_CLIENTE WHERE ID_OPERACIONAL = @ID_OPERACIONAL_TEMP)
		BEGIN
			INSERT INTO DIM_CLIENTE(NOME, CPF, ID_OPERACIONAL, CELULAR, TELEFONE, 
			EMAIL, RUA, NUMERO, REFERENCIA, CIDADE, ESTADO)

			VALUES(@NOME_TEMP, @CPF_TEMP, @ID_OPERACIONAL_TEMP, @CELULAR_TEMP, @TELEFONE_TEMP, @EMAIL_TEMP, @RUA_TEMP,
			@NUMERO_TEMP, @REFERENCIA_TEMP, @CIDADE_TEMP, @ESTADO_TEMP)	
		END
		-- IF THE CLIENT ALREADY EXISTS IN THE OLAP THEN 
		ELSE
		BEGIN
			-- GETTING THE OLDER VERSION OF CLIENTE
			SELECT @NOME_TEMP = C.NOME, @CPF_TEMP = C.CPF
			FROM DIM_CLIENTE C
			WHERE C.ID_OPERACIONAL = @ID_OPERACIONAL_TEMP
			PRINT 'O CLIENTE ' + @NOME_TEMP + ' JÁ EXISTE.'
		END
		FETCH C_CLIENTE INTO @DATA_CARGA, @NOME_TEMP, @CPF_TEMP, @ID_OPERACIONAL_TEMP, @CELULAR_TEMP, @TELEFONE_TEMP, @EMAIL_TEMP, @RUA_TEMP,
		@NUMERO_TEMP, @REFERENCIA_TEMP, @CIDADE_TEMP, @ESTADO_TEMP
	END
	CLOSE C_CLIENTE
	DEALLOCATE C_CLIENTE
END
GO

-- TIPO VALOR
GO
CREATE OR ALTER PROCEDURE SP_ETL_TIPO_VALOR(@DATA DATETIME)
AS
BEGIN
	SET NOCOUNT ON
	DECLARE  
	@DATA_CARGA DATETIME,
	@TIPO_PACOTE_TEMP VARCHAR(50), 
	@PRECO_PACOTE_TEMP VARCHAR(11),
	@ID_TIPO_VALOR_TEMP INT

	DECLARE V_TIPO_VALOR CURSOR
	FOR SELECT V.DATACARGA, V.ID_TIPO_VALOR, V.TIPO_PACOTE, V.PRECO_PACOTE FROM TB_AUX_TIPO_VALOR V

	OPEN V_TIPO_VALOR
	FETCH V_TIPO_VALOR INTO @DATA_CARGA, @ID_TIPO_VALOR_TEMP, @TIPO_PACOTE_TEMP, @PRECO_PACOTE_TEMP

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		-- VERIFY IF THE CLIENT NOT EXISTS IN THE OLAP THEN INSERT
		IF NOT EXISTS (SELECT * FROM DIM_TIPO_VALOR WHERE ID_TIPO_VALOR = @ID_TIPO_VALOR_TEMP)
		BEGIN
			INSERT INTO DIM_TIPO_VALOR(ID_TIPO_VALOR, TIPO_PACOTE, PRECO_PACOTE)

			VALUES(@ID_TIPO_VALOR_TEMP, @TIPO_PACOTE_TEMP, @PRECO_PACOTE_TEMP)	
		END
		-- IF THE CLIENT ALREADY EXISTS IN THE OLAP THEN 
		ELSE
		BEGIN
			-- GETTING THE OLDER VERSION OF CLIENTE
			SELECT V.ID_TIPO_VALOR, V.TIPO_PACOTE, V.PRECO_PACOTE
			FROM DIM_TIPO_VALOR V
			WHERE V.ID_TIPO_VALOR = @ID_TIPO_VALOR_TEMP
			PRINT 'O TIPO DE PACOTE ' + @TIPO_PACOTE_TEMP + ' JÁ EXISTE.'
		END
		FETCH V_TIPO_VALOR INTO @DATA_CARGA, @ID_TIPO_VALOR_TEMP, @TIPO_PACOTE_TEMP, @PRECO_PACOTE_TEMP
	END
	CLOSE V_TIPO_VALOR
	DEALLOCATE V_TIPO_VALOR
END
GO


-- PRODUTO
GO
CREATE OR ALTER PROCEDURE SP_ETL_PRODUTO(@DATA DATETIME)
AS
BEGIN
	SET NOCOUNT ON
	DECLARE  
	@DATA_CARGA DATETIME,
	@ID_OPERACIONAL_TEMP INT,
	@COD_PRODUTO_TEMP INT,
	@NOME_PRODUTO_TEMP VARCHAR(50),
	@DATA_FABRICACAO_TEMP DATETIME,
	@DATA_VALIDADE_TEMP DATETIME 

	DECLARE P_PRODUTO CURSOR
	FOR SELECT  P.COD_PRODUTO, P.NOME , P.DATA_FABRICACAO , P.DATA_VALIDADE FROM TB_AUX_PRODUTO P

	OPEN P_PRODUTO
	FETCH P_PRODUTO INTO @ID_OPERACIONAL_TEMP, @NOME_PRODUTO_TEMP, @DATA_FABRICACAO_TEMP, @DATA_VALIDADE_TEMP 

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		-- VERIFY IF THE CLIENT NOT EXISTS IN THE OLAP THEN INSERT
		IF NOT EXISTS (SELECT * FROM DIM_PRODUTO WHERE ID_OPERACIONAL = @ID_OPERACIONAL_TEMP)
		BEGIN
			INSERT INTO DIM_PRODUTO( ID_OPERACIONAL, COD_PRODUTO, NOME , DATA_FABRICACAO, DATA_VALIDADE)

			VALUES(@ID_OPERACIONAL_TEMP, @COD_PRODUTO_TEMP, @NOME_PRODUTO_TEMP , @DATA_FABRICACAO_TEMP, @DATA_VALIDADE_TEMP)	--CASO MUDE O COD, ACERTA AQUI
		END
		-- IF THE CLIENT ALREADY EXISTS IN THE OLAP THEN 
		ELSE
		BEGIN
			-- GETTING THE OLDER VERSION OF CLIENTE
			SELECT @NOME_PRODUTO_TEMP = P.NOME
			FROM DIM_PRODUTO P
			WHERE P.ID_OPERACIONAL = @ID_OPERACIONAL_TEMP
			PRINT 'O PRODUTO DE ID ' + @ID_OPERACIONAL_TEMP + ' JÁ EXISTE.'
		END
		FETCH P_PRODUTO INTO @ID_OPERACIONAL_TEMP, @NOME_PRODUTO_TEMP, @DATA_FABRICACAO_TEMP, @DATA_VALIDADE_TEMP 
	END
	CLOSE P_PRODUTO
	DEALLOCATE P_PRODUTO
END
GO



-- PEDIDO
GO
CREATE OR ALTER PROCEDURE SP_ETL_FATO_PEDIDO
AS
BEGIN
	DECLARE @DATA_PEDIDO DATETIME, @ID_DATA_PREVISAO_CHEGADA BIGINT, @ID_DATA_CHEGADA BIGINT, @ID_DATA_COMPRA BIGINT, 
			@ID_OPERACIONAL INT, @ID_PRODUTO INT, @ID_TIPO_VALOR INT, @ID_CLIENTE INT, @ID_ASSINATURA INT,
			@VALOR NUMERIC(10,2)
	DECLARE C_FATO_PEDIDO CURSOR FOR 
	SELECT DATACARGA, COD_PEDIDO, VALOR, ID_CLIENTE, ID_TIPO_VALOR, ID_PRODUTO,
	ID_DATA_COMPRA, ID_DATA_PREVISAO_CHEGADA, ID_DATA_CHEGADA
	FROM TB_AUX_PEDIDO

	OPEN C_FATO_PEDIDO
	FETCH C_FATO_PEDIDO INTO @DATA_PEDIDO, @ID_OPERACIONAL, @VALOR, @ID_CLIENTE, 
			@ID_TIPO_VALOR, @ID_PRODUTO, @ID_DATA_COMPRA, @ID_DATA_PREVISAO_CHEGADA, @ID_DATA_CHEGADA

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		SET @ID_DATA_COMPRA = (SELECT ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @DATA_PEDIDO)
		SET @ID_DATA_PREVISAO_CHEGADA = (SELECT ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @DATA_PEDIDO + 7)
		SET @ID_DATA_CHEGADA = (SELECT ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @ID_DATA_CHEGADA)
		SET @ID_CLIENTE = (SELECT ID_OPERACIONAL FROM DIM_CLIENTE C WHERE C.ID_OPERACIONAL = @ID_CLIENTE)
		SET @ID_PRODUTO = (SELECT ID_OPERACIONAL FROM DIM_PRODUTO P WHERE P.ID_OPERACIONAL = @ID_PRODUTO)
		SET @ID_ASSINATURA = (SELECT ID_OPERACIONAL  FROM FATO_ASSINATURA A WHERE A.ID_OPERACIONAL = @ID_ASSINATURA)
		SET @ID_TIPO_VALOR = (SELECT ID_TIPO_VALOR FROM DIM_TIPO_VALOR T WHERE T.ID_TIPO_VALOR = @ID_TIPO_VALOR)
		
		INSERT INTO FATO_PEDIDO(ID_PEDIDO, VALOR, ID_CLIENTE ,ID_TIPO_VALOR,
					ID_PRODUTO, ID_DATA_COMPRA, ID_DATA_PREVISAO_CHEGADA , ID_DATA_CHEGADA)
		VALUES(@ID_OPERACIONAL, @VALOR, @ID_CLIENTE , @ID_TIPO_VALOR,
					@ID_PRODUTO, @ID_DATA_COMPRA, @ID_DATA_PREVISAO_CHEGADA , @ID_DATA_CHEGADA)

		FETCH C_FATO_PEDIDO INTO @DATA_PEDIDO, @ID_OPERACIONAL, @VALOR, @ID_CLIENTE, 
				@ID_TIPO_VALOR, @ID_PRODUTO, @ID_DATA_COMPRA, @ID_DATA_PREVISAO_CHEGADA, @ID_DATA_CHEGADA
	END
	CLOSE C_FATO_PEDIDO
	DEALLOCATE C_FATO_PEDIDO
END
GO


-- ASSINATURA
GO
CREATE OR ALTER PROCEDURE SP_ETL_FATO_ASSINATURA
AS
BEGIN
	DECLARE @DATA_ASSINATURA DATETIME, @ID_DATA_INICIO BIGINT, @ID_DATA_CANCELAMENTO BIGINT, 
			@ID_OPERACIONAL INT, @ID_CLIENTE INT, @ID_TIPO_VALOR INT, @STATUS VARCHAR(9),@MESES_ASSINATURA INT,
			@VALOR_MENSALIDADE NUMERIC(10,2)
	DECLARE C_FATO_ASSINATURA CURSOR FOR 
	SELECT DATACARGA, COD_ASSINATURA, VALOR_MENSALIDADE, STATUS, ID_DATA_INICIO,
    ID_DATA_CANCELAMENTO, ID_CLIENTE, ID_TIPO_VALOR
	FROM TB_AUX_ASSINATURA

	OPEN C_FATO_ASSINATURA
	FETCH C_FATO_ASSINATURA INTO  @DATA_ASSINATURA, @ID_OPERACIONAL, @VALOR_MENSALIDADE, @STATUS, 
			@ID_DATA_INICIO, @ID_DATA_CANCELAMENTO, @ID_CLIENTE, @ID_TIPO_VALOR

	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		SET @ID_DATA_INICIO = (SELECT ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @DATA_ASSINATURA)
		SET @ID_DATA_CANCELAMENTO = (SELECT ID_TEMPO FROM DIM_TEMPO T WHERE T.DATA = @ID_DATA_CANCELAMENTO)
		SET @ID_CLIENTE = (SELECT ID_OPERACIONAL FROM DIM_CLIENTE C WHERE C.ID_OPERACIONAL = @ID_CLIENTE)
		SET @ID_TIPO_VALOR = (SELECT ID_TIPO_VALOR FROM DIM_TIPO_VALOR T WHERE T.ID_TIPO_VALOR = @ID_TIPO_VALOR)
		
		INSERT INTO FATO_ASSINATURA(ID_OPERACIONAL, VALOR_MENSALIDADE, MESES_ASSINATURA, STATUS, 
					ID_DATA_INICIO, ID_DATA_CANCELAMENTO, ID_CLIENTE, ID_TIPO_VALOR)
		VALUES(@ID_OPERACIONAL, @VALOR_MENSALIDADE, NULL, @STATUS, @ID_DATA_INICIO, @ID_DATA_CANCELAMENTO,
				@ID_CLIENTE, @ID_TIPO_VALOR)

		FETCH C_FATO_ASSINATURA INTO  @DATA_ASSINATURA, @ID_OPERACIONAL, @VALOR_MENSALIDADE, @STATUS, 
									@ID_DATA_INICIO, @ID_DATA_CANCELAMENTO, @ID_CLIENTE, @ID_TIPO_VALOR
	END
	CLOSE C_FATO_ASSINATURA
	DEALLOCATE C_FATO_ASSINATURA
END
GO